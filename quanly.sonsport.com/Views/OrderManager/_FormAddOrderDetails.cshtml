<script src="~/Assets/Scripts/jquery.validate.js"></script>
<script src="~/Assets/Scripts/jquery.validate.unobtrusive.js"></script>
<script src="~/Assets/Scripts/jquery.unobtrusive-ajax.min.js"></script>
@using quanly.sonsport.com.Common
@using Model.Context
@using Business.BusinessViewModels
@model OrderDetailsViewModels
@{
    var lstYardOfPlace = ViewData[GlobalConstans.ViewDataLstYardOfPlace] as List<SANBONG>;
}
@using (Ajax.BeginForm("CreateOrderDetails", "OrderManager",
            ajaxOptions: new AjaxOptions
            {
                HttpMethod = "POST",
                OnSuccess = "OnAddOrderSuccess",
                OnFailure = "OnFailure",
            }
            , htmlAttributes: new { @id = "form-add-od" }))
{
    <div class="modal-body">
        @Html.AntiForgeryToken()
        @Html.HiddenFor(n => n.MasterId)
        @Html.HiddenFor(n => n.PlaceId)
        <div class="row">
            <div class="form-group col-6">
                @Html.LabelFor(n => n.CustomerName, htmlAttributes: new { @class = "col-form-label" })
                @Html.TextBoxFor(n => n.CustomerName, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(n => n.CustomerName, null, htmlAttributes: new { @class = "text-danger" })
            </div>
            <div class="form-group col-6">
                @Html.LabelFor(n => n.PhoneNumber, htmlAttributes: new { @class = "col-form-label" })
                @Html.TextBoxFor(n => n.PhoneNumber, htmlAttributes: new { @class = "form-control", type = "tel" })
                @Html.ValidationMessageFor(n => n.PhoneNumber, null, htmlAttributes: new { @class = "text-danger" })
            </div>
        </div>
        <div class="row">
            <div class="form-group col-6">
                @Html.LabelFor(n => n.KickAtDate, htmlAttributes: new { @class = "col-form-label" })
                @Html.TextBoxFor(n => n.KickAtDate, "{0:yyyy-MM-dd}", htmlAttributes: new { @class = "form-control", @type = "date" })
                @Html.ValidationMessageFor(n => n.KickAtDate, null, htmlAttributes: new { @class = "text-danger" })
            </div>
            <div class="form-group col-3">
                @Html.LabelFor(n => n.StartTime, htmlAttributes: new { @class = "col-form-label" })
                @Html.TextBoxFor(n => n.StartTime, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(n => n.StartTime, null, htmlAttributes: new { @class = "text-danger" })
            </div>
            <div class="form-group col-3">
                @Html.LabelFor(n => n.EndTime, htmlAttributes: new { @class = "col-form-label" })
                @Html.TextBoxFor(n => n.EndTime, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(n => n.EndTime, null, htmlAttributes: new { @class = "text-danger" })
            </div>
        </div>
        <div class="row">
            <div class="form-group col-6">
                @Html.LabelFor(n => n.YardId, htmlAttributes: new { @class = "col-form-label" })
                @Html.DropDownListFor(n => n.YardId, new SelectList(lstYardOfPlace, "MaSanBong", "TenSanBong", "TenSanBong"), htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(n => n.YardId, null, htmlAttributes: new { @class = "text-danger" })
            </div>
            <div class="form-group col-6">
                @Html.LabelFor(n => n.Price, htmlAttributes: new { @class = "col-form-label" })
                @Html.TextBoxFor(n => n.Price, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(n => n.Price, null, htmlAttributes: new { @class = "text-danger" })
            </div>
        </div>
    </div>
    <div class="modal-footer">
        <a class="btn btn-secondary text-white" data-dismiss="modal">Thoát</a>
        <a class="btn btn-primary text-white" id="btnSubmitFormAddOd">Xác nhận thêm</a>
    </div>
}
<script>
    $(function () {
        $('#btnSubmitFormAddOd').on('click', function (event) {
            event.preventDefault();
            $('#form-add-od').submit();
        });

        $('#StartTime').focusout(function () {
            CaculatorPrice();
        });
        $('#EndTime').focusout(function () {
            CaculatorPrice();
        });

    })

    function CaculatorPrice() {
        var start = $('#StartTime').val();
        var end = $('#EndTime').val();
        var YardId = $("#YardId").val();
        if (start == 0 || start == null || end == 0 || end == null || start >= end ) {
            $('#Price').val(0);
        }
        else {
            $.get('@Url.Action("CaculatorPrice","OrderManager")?start=' + start + '&end=' + end + '&YardId=' + YardId, function (r) {
                if (r.success) {
                    $('#Price').val(r.totalprice);
                }
            });
        }
    }

    function OnAddOrderSuccess(response) {
        if (!response.success) {
            var PlaceId = $('#PlaceId').val();
            sessionStorage.setItem('PlaceIdSelected', PlaceId);
            location.reload();
        }
        else {
            var PlaceId = $('#PlaceId').val();
            sessionStorage.setItem('PlaceIdSelected', PlaceId);
            location.reload();
        }
    }
</script>

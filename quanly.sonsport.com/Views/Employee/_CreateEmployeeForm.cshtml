@using Business.BusinessViewModels
@model RegisterEmployeeViewModel
<script src="~/Assets/Scripts/jquery.validate.min.js"></script>
<script src="~/Assets/Scripts/jquery.validate.unobtrusive.js"></script>
<script src="~/Assets/Scripts/jquery.unobtrusive-ajax.min.js"></script>
@using (Ajax.BeginForm("CreateAccountEmployee", "Employee",
            ajaxOptions: new AjaxOptions
            {
                HttpMethod = "POST",
                OnSuccess = "OnCreateEmpAccSuccess",
                OnFailure = "OnFailure"
            },
            htmlAttributes: new { @id = "employee-account-form" }))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(n => n.MasterId)
    @Html.HiddenFor(n => n.EmployeeId)
    <div class="row">
        <div class="form-group col-6">
            @Html.LabelFor(n => n.UserName, htmlAttributes: new { @class = "col-form-label" })
            @Html.TextBoxFor(n => n.UserName, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(n => n.UserName, null, htmlAttributes: new { @class = "text-danger" })
        </div>
        <div class="form-group col-6">
            @Html.LabelFor(n => n.Email, htmlAttributes: new { @class = "col-form-label" })
            @Html.TextBoxFor(n => n.Email, htmlAttributes: new { @class = "form-control", @style = "border:none", @readonly = "readonly" })
            @Html.ValidationMessageFor(n => n.Email, null, htmlAttributes: new { @class = "text-danger" })
        </div>
    </div>
    <div class="row">
        <div class="form-group col-6">
            @Html.LabelFor(n => n.Password, htmlAttributes: new { @class = "col-form-label" })
            @Html.PasswordFor(n => n.Password, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(n => n.Password, null, htmlAttributes: new { @class = "text-danger" })
        </div>
        <div class="form-group col-6">
            @Html.LabelFor(n => n.ConfirmPassword, htmlAttributes: new { @class = "col-form-label" })
            @Html.PasswordFor(n => n.ConfirmPassword, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(n => n.ConfirmPassword, null, htmlAttributes: new { @class = "text-danger" })
        </div>
    </div>
}

<script>
    function OnCreateEmpAccSuccess(response) {
        var success = response.success;
        var data = response;
        if (response.success) {
            LoadRowEmployeeByMaster();
        }
        $('#AddOrEditModal').find('.modal-body').html(response);
    }
</script>